# trigger:
# - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  subscription: TestServiceConnectVala
steps:

- task: AzureCLI@2
  displayName: Azure CLI
  inputs:
    azureSubscription: $(subscription)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId" 
     
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$servicePrincipalKey"
      
      az account show
      echo subscriptionId=$(az account show --query 'id' -o tsv)
      echo tenantId=$(az account show --query 'tenantId' -o tsv)
      
      az login --service-principal --username $(ARM_CLIENT_ID) --password $(ARM_CLIENT_SECRET)  --tenant $(tenantId)
      az account set --subscription "$(subscriptionId)"
      
     
    addSpnToEnvironment: true


- task: Bash@3
  inputs:
    filePath: '$(System.DefaultWorkingDirectory)/scripts/get_remote_state_sas_key.sh'
#- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
#  inputs:
#    terraformVersion: '1.4.2'

#- task: Bash@3
#  inputs:
#    targetType: 'inline'
#    script: |
#      SAS_KEY=$(az storage container generate-sas --account-name $NAME --account-key $STORAGE_KEY --name $CONTAINER --permissions acdlrw --expiry $EXPIRY --https-only -o tsv)
#      echo $(ARM_SUBSCRIPTION_ID)
#    displayName: 'test'  

# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: |
#       echo $(ARM_SUBSCRIPTION_ID)
#       az account set --subscription "${ARM_SUBSCRIPTION_ID}"
#       az login --service-principal --username $(ARM_CLIENT_ID) --password $(ARM_CLIENT_SECRET)  --tenant $(ARM_TENANT_ID)
#       cd $(System.DefaultWorkingDirectory)/deployments/dev/
#       terraform init -reconfigure
#     displayName: 'Terraform init'   